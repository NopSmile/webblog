1、 ; 多个命令的分隔符
2、/ 根或路径的分隔符
3、>或1> 重定向 （覆盖原来的对象）
4、>>或1>>追加重定向
5、<或<0 重定向 （覆盖原来的对象）
6、<<或<<0追加重定向
7、2>标准错误输出
8、>或1> 输出重定向：把前面输出的东西输入到后面的文件中，会删除文件原有内容
9、>>或1>> 追加重定向：把前面输出的东西追加到后边的文件中，不会删除文件原有内容
10、<或<0 输入重定向：输入重定向用于改变命令的输入，制定输入内容，后跟文件名。
11、<<或<<0 输入重定向：后跟字符串，用于表示“输入结束”，也可以用ctrl+d来结束输入
12、2> 错误重定向:把错误信息输入到后面的文件中，会删除文件有内容
13、2>> 错误追加重定向：把错误信息追加到后边的文件中，不会删除文件原有内容。

1.标准输入（stdin）：代码为0，使用<或<<
标准输出（stdout）：代码为1，使用>>或>
3.标准错误输出（stderr）：错误代码为2，使用2>>或2>
.. 上一级
. 当前
| 管道符 前一个命令的输出交给后一个命令处理

history
259 ls
(259为最后一条记录的情况下)

!+历史记录的行号=执行那行的命令 例如：!259
!!执行最近的命令
!+字母 执行最近的以字母开头的命令 例如：!l=ls
!-N 从下面执行数N个阿拉伯数字命令 !-1
(以上均是执行了ls)

代表重定向到哪里，例如：echo "123" > /home/123.txt
1 表示stdout标准输出，系统默认值是1，所以">/dev/null"等同于"1>/dev/null"
2 表示stderr标准错误
& 表示等同于的意思，2>&1，表示2的输出重定向等同于1

`>/dev/null 2>&1问题（1>/dev/null 2>/dev/null）`
